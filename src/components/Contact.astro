---
import Form from "./Form.astro";
---

<div class="bg-gray-50">
    <section class="section">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-start">
            <div class="bg-white rounded-xl shadow-lg p-8 col-2 row-1">
                <Form />
                <div
                    class="hidden flex-col items-center justify-center text-center bg-green-50 border border-green-200 rounded-lg p-6 mt-6"
                    id="success-message"
                >
                    <div class="text-green-600">
                        <svg
                            class="w-12 h-12 mx-auto mb-4"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M5 13l4 4L19 7"></path>
                        </svg>
                        <h3 class="text-lg font-semibold mb-2">
                            Ditt meddelande har skickats
                        </h3>
                        <p class="text-green-700">
                            Vi återkommer så snart vi kan.
                        </p>
                    </div>
                </div>
                <div
                    class="hidden flex-col items-center justify-center text-center bg-red-50 border border-red-200 rounded-lg p-6 mt-6"
                    id="fail-message"
                >
                    <div class="text-red-600">
                        <svg
                            class="w-12 h-12 mx-auto mb-4"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                            ></path>
                        </svg>
                        <h3 class="text-lg font-semibold mb-2">
                            Ditt meddelande kunde inte skickas
                        </h3>
                        <p class="text-red-700">
                            Kontakta oss via <a
                                href="mailto:kontakt@limer.dev"
                                class="underline">kontakt@limer.dev</a
                            >
                        </p>
                    </div>
                </div>
            </div>
            <div
                class="bg-gradient-to-br from-orange-500 to-orange-600 rounded-xl text-white p-8 row-1 col-1"
            >
                <h3 class="text-2xl font-bold mb-6">Få kontakt med oss</h3>
                <div class="space-y-4">
                    <div class="flex items-center gap-3">
                        <svg
                            class="w-5 h-5"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
                            ></path>
                        </svg>
                        <span>kontakt@limer.dev</span>
                    </div>
                    <div class="flex items-center gap-3">
                        <svg
                            class="w-5 h-5"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
                            ></path>
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        </svg>
                        <span>Järnvägsgatan 8, 243 30 Höör</span>
                    </div>
                    <div class="flex items-center gap-3">
                        <svg
                            class="w-5 h-5"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"
                            ></path>
                        </svg>
                        <span>Limer AB, 559503-6210</span>
                    </div>
                </div>
                <div class="mt-8">
                    <p class="text-orange-100 leading-relaxed">
                        Vi svarar vanligtvis inom 24 timmar på vardagar. Berätta
                        gärna lite om ditt projekt så kan vi ge dig bättre
                        rådgivning.
                    </p>
                </div>
            </div>
        </div>
        <script>
            interface ContactFormData {
                name: string;
                email: string;
                phone: string;
                message: string;
            }

            const formSubmit = document.getElementById(
                "contact-form-submit-button",
            );
            const form = document.getElementById(
                "contact-form",
            ) as HTMLFormElement;
            const formName = document.getElementById(
                "contact-form-name",
            ) as HTMLInputElement;
            const formEmail = document.getElementById(
                "contact-form-email",
            ) as HTMLInputElement;
            const formPhone = document.getElementById(
                "contact-form-phone",
            ) as HTMLInputElement;
            const formMessage = document.getElementById(
                "contact-form-message",
            ) as HTMLTextAreaElement;
            const formSurname = document.getElementById(
                "contact-form-surname",
            ) as HTMLInputElement;

            function randomIntFromInterval(min: number, max: number) {
                return Math.floor(Math.random() * (max - min + 1) + min);
            }

            const surnameA = randomIntFromInterval(5, 11);
            const surnameB = randomIntFromInterval(2, 7);
            formSurname.placeholder = surnameA + " + " + surnameB + " = ?";

            formSubmit?.addEventListener("click", () => trySubmit());

            function trySubmit() {
                if (
                    form == null ||
                    formName == null ||
                    formEmail == null ||
                    formPhone == null ||
                    formMessage == null ||
                    formSurname == null
                ) {
                    return;
                }

                const elements = [
                    formSubmit,
                    formName,
                    formEmail,
                    formPhone,
                    formMessage,
                    formSurname,
                ];

                if (Number(formSurname.value) != surnameA + surnameB) {
                    return;
                }

                function disable() {
                    elements.map((e: any) => {
                        e.disabled = true;
                    });
                }

                let data: ContactFormData = {
                    name: formName.value,
                    email: formEmail.value,
                    phone: formPhone.value,
                    message: formMessage.value,
                };

                const request = {
                    channel: "C08DK2Z344D",
                    blocks: [
                        {
                            type: "header",
                            text: {
                                type: "plain_text",
                                text: "Kontaktformulär Limer.dev",
                            },
                        },
                        {
                            type: "section",
                            text: {
                                type: "mrkdwn",
                                text:
                                    data.message +
                                    "\n\n" +
                                    data.name +
                                    "\n" +
                                    data.email +
                                    "\n" +
                                    data.phone,
                            },
                        },
                    ],
                };

                (async () => {
                    disable();

                    const rawResponse = await fetch(
                        "https://hooks.slack.com/services/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",
                        {
                            method: "POST",
                            headers: {
                                Accept: "application/x-www-form-urlencoded",
                                "Content-Type":
                                    "application/x-www-form-urlencoded",
                            },
                            body: JSON.stringify(request),
                        },
                    );
                    const content = rawResponse.ok;
                    if (content !== true) {
                        console.error(rawResponse);
                        form.style.display = "none";
                        const failMessage = document.getElementById(
                            "fail-message",
                        ) as HTMLElement;
                        failMessage.style.display = "flex";
                        failMessage.classList.remove("hidden");
                    } else {
                        form.style.display = "none";
                        const successMessage = document.getElementById(
                            "success-message",
                        ) as HTMLElement;
                        successMessage.style.display = "flex";
                        successMessage.classList.remove("hidden");
                    }
                })();
            }
        </script>
    </section>
</div>
